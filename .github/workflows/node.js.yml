name: CI/CD for Express.js app (Node.js)

on:

  push:
    tags:
    - '*\.*\.*'
#    branches: [ main ]
#  pull_request:
#    branches: [ main ]

env:
  release-version: '0.0.1'

jobs:

  get-tag-version:
    name: Pick the version number from git tag
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [14.18] # [12.x, 13.x, 14.x, 15.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        os: [ubuntu-latest] # [ubuntu-latest, ubuntu-20.04, ubuntu-18.04]

    steps:
    - uses: actions/checkout@v2
    - name: Set Release Version from git tag I
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - name: Set Release Version from git tag II
      run: echo "release-version=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

    - name: Print git tag version
      run: echo The release version is:${RELEASE_VERSION}

    - name: Print env for 'git tag version'
      run: echo The release version is:${{ env.release-version }}

    - name: Print event that triggered this workflow
      run: echo The event that triggered this workflow is:${{ github.event_name }}

  run-unit-tests:
    name: Test Jest Express.js REST-API
    needs: get-tag-version
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [14.18] # [12.x, 13.x, 14.x, 15.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        os: [ubuntu-latest] # [ubuntu-latest, ubuntu-20.04, ubuntu-18.04]

    steps:
    - uses: actions/checkout@v2

    - name: Print a greeting
      run: echo Hello everyone! We are executing all JEST tests here!

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'


    - run: npm install

    - run: echo Running Jest Unit tests
    - run: npm test

    - name: Upload Test Report Artefact
      uses: actions/upload-artifact@v1
      with:
        name: test-results-v${{ env.release-version }}
        path: public/test-results.xml

    - name: Upload Test Coverage Report Artefact
      uses: actions/upload-artifact@v1
      with:
        name: test-coverage-v${{ env.release-version }}
        path: public/coverage

  run-code-inspection:
    name: ESLint on app sourcecode
    needs: get-tag-version
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [14.18] # [12.x, 13.x, 14.x, 15.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        os: [ubuntu-latest] # [ubuntu-latest, ubuntu-20.04, ubuntu-18.04]

    steps:
    - uses: actions/checkout@v2

    - name: Print a greeting
      run: echo Hello everyone! We are now linting the code ..

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - run: npm install
    - run: npm run eslint-scan
    - run: npm run eslint-report

    - name: Upload Linter Report Artefact
      uses: actions/upload-artifact@v1
      with:
        name: linter-report-v${{ env.release-version }}
        path: public/linter-results.xml

  generate-jsdoc:
    name: JSDoc generation on app sourcecode
    needs: [run-unit-tests, run-code-inspection]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [14.18] # [12.x, 13.x, 14.x, 15.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        os: [ubuntu-latest] # [ubuntu-latest, ubuntu-20.04, ubuntu-18.04]

    steps:
    - uses: actions/checkout@v2

    - name: Print a greeting
      run: echo Hello everyone! We are now generating JSDoc documentation for all JavaScript source codes ..

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - run: npm install
    - run: npm run jsdoc

    - name: Upload JSDoc documentation
      uses: actions/upload-artifact@v1
      with:
        name: jsdoc-v${{ env.release-version }}
        path: public/jsdoc

  build-and-release-production:
    name: Create and Release Production Build
    needs: generate-jsdoc
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 14.18
      uses: actions/setup-node@v2
      with:
        node-version: 14.18
        cache: 'npm'
    - name: Debug Output
      run: |
        echo npm is now installing ..
    - name: Install npm packages
      run: npm install

    - name: Debug Output
      run: |
        echo npm is invoking target 'release'

    - name: Build Production Release
      run: npm run release

    - name: Upload Release Artefact
      uses: actions/upload-artifact@v1
      with:
        name: app-bundle-v${{ env.release-version }}
        path: public/app-bundle.js

    - name: Create GitHub Release
      uses: ncipollo/release-action@v1
      with:
        name: Release v${{ env.release-version }}
        tag: ${{ env.release-version }}
        artifacts: 'public/app-bundle.js'
        token: ${{ secrets.GITHUB_TOKEN }}
        allowUpdates: true
        omitBody: true
        removeArtifacts: true
