name: CI/CD for Express.js app (Node.js)

on:

  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  run-tests:
    name: Test Express.js REST-API
    runs-on: ${{ matrix.os }}
    env:
      CI: true
    strategy:
      matrix:
        node-version: [12.x] # [12.x, 13.x, 14.x, 15.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        os: [ubuntu-latest] # [ubuntu-latest, ubuntu-20.04, ubuntu-18.04]

    steps:
    - uses: actions/checkout@v2

    - name: Print a greeting
      run: echo Hello everyone! We are executing all tests here!

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - run: npm install
    - run: npm test

    - run: mkdir -p public
    - run: npm run testReport
    - name: Upload Test Report Artefact
      uses: actions/upload-artifact@v1
      with:
        name: testReport-v1.0.0
        path: public/test-report.xml

  run-linter:
    name: ESLint on app sourcecode
    needs: run-tests
    runs-on: ${{ matrix.os }}
    env:
      CI: true
    strategy:
      matrix:
        node-version: [12.x] # [12.x, 13.x, 14.x, 15.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        os: [ubuntu-latest] # [ubuntu-latest, ubuntu-20.04, ubuntu-18.04]

    steps:
    - uses: actions/checkout@v2

    - name: Print a greeting
      run: echo Hello everyone! We are now linting the code ..

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - run: npm install
    - run: npm run eslint

    - run: mkdir -p public
    - run: npm run eslintReport
    - name: Upload Linter Report Artefact
      uses: actions/upload-artifact@v1
      with:
        name: lintReport-v1.0.0
        path: public/linter-report.xml

  generate-jsdoc:
    name: JSDoc generation on app sourcecode
    needs: run-linter
    runs-on: ${{ matrix.os }}
    env:
      CI: true
    strategy:
      matrix:
        node-version: [12.x] # [12.x, 13.x, 14.x, 15.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        os: [ubuntu-latest] # [ubuntu-latest, ubuntu-20.04, ubuntu-18.04]

    steps:
    - uses: actions/checkout@v2

    - name: Print a greeting
      run: echo Hello everyone! We are now generating JSDoc documentation for all JavaScript source codes ..

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - run: npm install
    - run: mkdir -p public
    - run: npm run jsdoc

    - name: Upload JSDoc documentation
      uses: actions/upload-artifact@v1
      with:
        name: jsdoc-v1.0.0
        path: public/jsdoc

  release-production:
    name: Release Production Build
    needs: run-linter
    runs-on: ubuntu-latest
    env:
      CI: true

    strategy:
      matrix:
        node-version: [12.x] # [12.x, 13.x, 14.x, 15.x, 16.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Debug Output
      run: |
        echo npm is now installing ..
    - name: Install npm packages
      run: npm install
    - name: Debug Output
      run: |
        echo npm is invoking target 'release'
    - name: Build Production Release
      run: npm run release
    - name: Upload Release Artefact
      uses: actions/upload-artifact@v1
      with:
        name: server-v1.0.0
        path: public/server-v1.0.0.js
